<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Grade Horários</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <div class="grades-curriculares">
            <h3>Grades Curriculares</h3>
            <ul id="grades-list" class="draggable-list"></ul>
        </div>
        <div class="main-content">
            <div class="ambientes">
                <h3>Ambientes</h3>
                <ul id="ambientes-list" class="draggable-list"></ul>
            </div>
            <div class="grade-horarios">
                <table id="horarios-table">
                    <thead>
                        <tr>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
        <div class="notifications">
            <h3>Notificações</h3>
            <ul id="notifications-list"></ul>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/@shopify/draggable@1.0.0-beta.8/lib/draggable.bundle.js"></script>
</body>
</html>
<style>
body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 20px;
}

.container {
  display: flex;
  gap: 20px;
}

.grades-curriculares,
.notifications {
  width: 20%;
  background-color: #f9f9f9;
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 4px;
}

.main-content {
  width: 60%;
}

.ambientes {
  margin-bottom: 20px;
}

.draggable-list {
  list-style: none;
  padding: 0;
}

.draggable {
  padding: 8px;
  margin-bottom: 5px;
  background-color: #e1f5fe;
  border: 1px solid #81d4fa;
  border-radius: 4px;
  cursor: grab;
}

.grade-horarios {
  overflow-x: auto;
}

.grade-horarios table {
  width: 100%;
  border-collapse: collapse;
}

.grade-horarios th,
.grade-horarios td {
  border: 1px solid #ddd;
  text-align: center;
  padding: 8px;
}

.dropzone {
  height: 60px;
  background-color: #f1f1f1;
}

.notifications ul {
  max-height: 400px;
  overflow-y: auto;
}

.notifications li {
  margin-bottom: 10px;
  padding: 5px;
  background-color: #e8f5e9;
  border: 1px solid #a5d6a7;
  border-radius: 4px;
}
</style>
<script>

document.addEventListener("DOMContentLoaded", () => {
  const gradesList = document.getElementById("grades-list")
  const ambientesList = document.getElementById("ambientes-list")
  const horariosTable = document.getElementById("horarios-table")
  const notificationsList = document.getElementById("notifications-list")

  function addNotification(message, type = "success") {
    const li = document.createElement("li")
    li.textContent = message
    li.className = type
    notificationsList.appendChild(li)
  }

  const grades_curriculares = [
    { id: 1, nome: "Matemática", carga_horaria: 60 },
    { id: 2, nome: "Português", carga_horaria: 60 },
    { id: 3, nome: "História", carga_horaria: 45 },
    { id: 4, nome: "Geografia", carga_horaria: 45 },
    { id: 5, nome: "Ciências", carga_horaria: 60 },
  ]

  var ambientesRaw = '<%= raw(json_escape(@ambientes.html_safe))%>'
  const ambientes = JSON.parse(ambientesRaw)
  var diasRaw = '<%= raw(json_escape(@dias))%>'
  const dias = JSON.parse(diasRaw)
  //const horarios = ["08:00", "09:00", "10:00", "11:00", "13:00", "14:00", "15:00", "16:00"]
  var horariosRaw = '<%= raw(json_escape(@horarios))%>'
  console.log(horariosRaw);
  const horarios = JSON.parse(horariosRaw)

  // Populate grades curriculares
  grades_curriculares.forEach((grade) => {
    const li = document.createElement("li")
    li.className = "draggable"
    li.setAttribute("data-id", grade.id)
    li.setAttribute("data-type", "grade")
    li.textContent = `${grade.nome} - ${grade.carga_horaria}h`
    gradesList.appendChild(li)
  })

  // Populate ambientes
  ambientes.forEach((ambiente) => {
    const li = document.createElement("li")
    li.className = "draggable"
    li.setAttribute("data-id", ambiente.id)
    li.setAttribute("data-type", "ambiente")
    li.textContent = ambiente.descricao
    ambientesList.appendChild(li)
  })

  // Create table header
  const headerRow = horariosTable.querySelector("thead tr")
  dias.forEach((dia) => {
    const th = document.createElement("th")
    th.textContent = `Dia ${dia}`
    headerRow.appendChild(th)
  })

  // Create table body
  const tbody = horariosTable.querySelector("tbody")
  horarios.forEach((horario) => {
    const tr = document.createElement("tr")
    const tdHorario = document.createElement("td")
    tdHorario.textContent = horario
    tr.appendChild(tdHorario)

    dias.forEach((dia) => {
      const td = document.createElement("td")
      td.className = "dropzone"
      td.setAttribute("data-dia", dia)
      td.setAttribute("data-horario", horario)
      tr.appendChild(td)
    })

    tbody.appendChild(tr)
  })

  //  This is a placeholder.  You MUST replace this with the actual initialization of your Draggable library.
  //  The specific initialization will depend on the library you are using.  Consult the library's documentation.

  let selectedGrade = null;
  let selectedAmbiente = null;

  const draggable = new Draggable.Draggable([gradesList, ambientesList], {
    draggable: ".draggable",
    dropzone: ".dropzone",
    mirror: {
      constrainDimensions: true,
    },
  });

  draggable.on("drag:start", (event) => {
    console.log("Drag started:", event);
    const item = event.source;
    if (item.getAttribute("data-type") === "grade") {
      selectedGrade = item;
    } else if (item.getAttribute("data-type") === "ambiente") {
      selectedAmbiente = item;
    }
  });

  draggable.on("drag:stop", (event) => {
    console.log("Drag stopped:", event);
  });

  draggable.on("droppable:dropped", (event) => {
    console.log("Item dropped:", event);
    const dropzone = event.dropzone;
  
    if (dropzone) {
      console.log("Selected Grade:", selectedGrade);
      console.log("Selected Ambiente:", selectedAmbiente);
  
      if (selectedGrade && selectedAmbiente) {
        const dia = dropzone.getAttribute("data-dia");
        const horario = dropzone.getAttribute("data-horario");
  
        const data = {
          aula: {
            grade_curricular_id: selectedGrade.getAttribute("data-id"),
            ambiente_id: selectedAmbiente.getAttribute("data-id"),
            dia: dia,
            horario_inicio: horario, // Assuming it's the start time
            horario_fim: calcularHorarioFim(horario, selectedGrade.getAttribute("data-id")),
            user_id: selectedGrade.getAttribute("data-user-id"), // Ensure you have user_id in the element
          },
        };
  
        fetch("/aulas", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-CSRF-Token": document.querySelector('meta[name="csrf-token"]').content,
          },
          body: JSON.stringify(data),
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error("Erro ao salvar a aula");
            }
            return response.json();
          })
          .then((result) => {
            dropzone.innerHTML = `${selectedGrade.textContent}<br>${selectedAmbiente.textContent}`;
            addNotification(
              `Aula adicionada: ${selectedGrade.textContent} em ${selectedAmbiente.textContent} no dia ${dia} às ${horario}`
            );
          })
          .catch((error) => {
            addNotification("Erro ao salvar a aula. Tente novamente.", "error");
            console.error(error);
          });
  
        selectedGrade = null;
        selectedAmbiente = null;
      } else {
        addNotification("Selecione uma grade curricular e um ambiente antes de adicionar à grade de horários.", "warning");
      }
    }
  });
 
  function calcularHorarioFim(horarioInicio, gradeId) {
    let [hour, minute] = horarioInicio.split(":").map(Number);
    hour += 1; // Add 1 hour to the start time
    return `${hour.toString().padStart(2, "0")}:${minute.toString().padStart(2, "0")}`;
  }
});
</script>
